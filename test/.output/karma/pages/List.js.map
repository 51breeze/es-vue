{"version":3,"sources":["D:/tools/es-vue/test/src/karma/pages/List.es"],"names":["getKeySymbols","List","props","name","phone","id","select","cities","checkedCities","timeValue","infiniteCount","infiniteCount2","drawer","page","transferOptions","collapseValue","datePickerValue","checkAll","isIndeterminate","$index","row","flag","creator","onMounted","items","formData","showDialog","selectedData","getTransferOptions","key","label","handleCheckAllChange","value","slice","handleCommand","obj","target","set","saveEdit","item","find","console","log","Message","success","error","MessageBox","confirm","then","res","index","findIndex","splice","Notification","title","message","catch","createTree","children","count","handleCheckChange","data","checked","indeterminate","loadNode","node","resolve","level","hasChild","Math","random","setTimeout","loadList","render","bind","forMap","o","i","resolveDirective","Loading","directive","_private","createRecord","reload","createComponent"],"mappings":"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","sourcesContent":["package karma.pages;\r\n\r\nimport web.components.Component\r\nimport karma.asserts.ListAssert;\r\n\r\nimport web.ui.Message;\r\nimport web.ui.MessageBox;\r\nimport web.ui.Notification;\r\nimport web.ui.Tree as TreeCom;\r\nimport web.ui.Loading;\r\nimport karma.components.MyDirective;\r\nimport karma.components.DirectiveTop;\r\nimport karma.components.Foreach\r\n\r\nclass List extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    @Override\r\n    onMounted(){\r\n        when( Env(testframework, 'karma') ){\r\n            new ListAssert(this);\r\n        }\r\n    }\r\n\r\n    @Reactive\r\n    private items = [\r\n        {name:'zhangshan',phone:'123456',id:1},\r\n        {name:'lisi',phone:'123456',id:2} \r\n    ];\r\n    \r\n\r\n    @Reactive\r\n    private formData={\r\n        select:'CN',\r\n        cities:['Shanghai', 'Beijing', 'Guangzhou', 'Shenzhen'],\r\n        checkedCities:['Shanghai'],\r\n        timeValue:\"\",\r\n        infiniteCount:0,\r\n        infiniteCount2:0,\r\n        drawer:false,\r\n        page:3,\r\n        transferOptions:[],\r\n        collapseValue:'1',\r\n        datePickerValue:\"\",\r\n        checkAll:false,\r\n        isIndeterminate:true\r\n    }\r\n\r\n    @Reactive\r\n    private showDialog = false;\r\n\r\n    @Reactive\r\n    private selectedData:{$index:number,row:{[key:string]:any}, flag:boolean} = {$index:0, row:{}, flag:true};\r\n\r\n    getTransferOptions(){\r\n        return [\r\n            {key:1, label:\"option 1\"},\r\n            {key:2, label:\"option 2\"},\r\n            {key:3, label:\"option 3\"}\r\n        ]\r\n    }\r\n\r\n    handleCheckAllChange(value:boolean){\r\n        if( value ){\r\n                this.formData.isIndeterminate = false;\r\n                this.formData.checkAll = true;\r\n                this.formData.checkedCities = this.formData.cities.slice(0);\r\n        }else{\r\n                this.formData.checkAll = false;\r\n                this.formData.checkedCities = [];\r\n        }\r\n    }\r\n\r\n    handleCommand(obj:[any,boolean]){\r\n        const  [target,flag] = obj;\r\n        this.showDialog = true;\r\n        target.flag = flag;\r\n        this.selectedData = target;\r\n    }\r\n\r\n    saveEdit(){\r\n            this.showDialog = false;\r\n            const flag = this.selectedData.flag;\r\n            const row = this.selectedData.row;\r\n            if( flag ){\r\n                const item = this.items.find( item=>row.id ==item.id )\r\n                if( item ){\r\n                    item.name = row.name;\r\n                    item.phone = row.phone;\r\n                    console.log( item )\r\n                    Message.success('Success');\r\n                }else{\r\n                    Message.error('Error');\r\n                }\r\n            }else{\r\n                MessageBox.confirm('确认要删除吗？').then( (res)=>{\r\n                    const index = this.items.findIndex( item=>row.id ==item.id );\r\n                    this.items.splice(index,1);\r\n                    Notification({title:\"tips\",message:\"删除成功\"})\r\n                }).catch( res=>{\r\n                    Message.error('Was Cancel');\r\n                });  \r\n            }\r\n    }\r\n\r\n\r\n    createTree(){\r\n        const props = {\r\n                label: 'name',\r\n                children: 'zones',\r\n        }\r\n\r\n        type Tree = {\r\n                name: string\r\n        };\r\n\r\n        type _Node = {\r\n                level:number,\r\n                data:{ name:string }\r\n        }\r\n\r\n        let count = 1;\r\n        const handleCheckChange = (\r\n                data:Tree,\r\n                checked: boolean,\r\n                indeterminate: boolean\r\n        ) => {\r\n                console.log(data, checked, indeterminate)\r\n        }\r\n\r\n        const loadNode = (node: _Node, resolve: (data: Tree[]) => void) => {\r\n                if (node.level === 0) {\r\n                    return resolve([{ name: 'Root1' }, { name: 'Root2' }])\r\n                }\r\n                if (node.level > 3) return resolve([])\r\n\r\n                let hasChild = false\r\n                if (node.data.name === 'region1') {\r\n                    hasChild = true\r\n                } else if (node.data.name === 'region2') {\r\n                    hasChild = false\r\n                } else {\r\n                    hasChild = Math.random() > 0.5\r\n                }\r\n\r\n                setTimeout(() => {\r\n                    let data: Tree[] = []\r\n                    if (hasChild) {\r\n                            data = [\r\n                            {\r\n                                name: `zone${count++}`,\r\n                            },\r\n                            {\r\n                                name: `zone${count++}`,\r\n                            },\r\n                            ]\r\n                    } else {\r\n                            data = []\r\n                    }\r\n\r\n                    resolve(data)\r\n                }, 500)\r\n        }\r\n        return <TreeCom props={props} load = {loadNode} lazy showCheckbox on:checkChange={handleCheckChange}></TreeCom>\r\n    }\r\n\r\n\r\n    private loadList(){\r\n        console.log('----loadList------', this.formData.infiniteCount )\r\n        this.formData.infiniteCount+=2;\r\n    }\r\n\r\n    \r\n\r\n    @Override\r\n    render(){\r\n\r\n        console.log(  this.formData.infiniteCount , '---------infiniteCount-------------');\r\n\r\n        return <div xmlns:d=\"@directives\" xmlns:dc=\"@directives::custom\" xmlns:s=\"@slots\" xmlns:ui=\"web.ui\">\r\n                <ui:Button type=\"primary\" ><ui:Icon><plus /></ui:Icon> button <ui:Icon name=\"Plus\"/> </ui:Button>\r\n                <ui:Table data = {this.items}>\r\n                    <ui:TableColumn prop = \"name\" label = \"姓名\"></ui:TableColumn>\r\n                    <ui:TableColumn prop = \"phone\" label = \"手机号\"></ui:TableColumn>\r\n                    <ui:TableColumn>\r\n                            <s:header>\r\n                                <span>操作</span>\r\n                            </s:header>\r\n                            <s:default scope=\"item\">\r\n                                <ui:Dropdown on:command={this.handleCommand.bind(this)}>\r\n                                        <span>更多 <i class=\"el-icon-arrow-down el-icon--right\"></i></span>\r\n                                        <ui:DropdownMenu s:dropdown >\r\n                                            <ui:DropdownItem command = {[item,true]}>编辑</ui:DropdownItem>\r\n                                            <ui:DropdownItem command = {[item,false]}>删除</ui:DropdownItem>\r\n                                        </ui:DropdownMenu>\r\n                                </ui:Dropdown>\r\n                            </s:default>\r\n                    </ui:TableColumn>\r\n                </ui:Table>\r\n\r\n                <ui:Select bind:value={this.formData.select} size=\"large\">\r\n                    <ui:Option label = \"CN\" value = \"CN\"></ui:Option>\r\n                    <ui:Option label = \"US\" value = \"US\"></ui:Option>\r\n                </ui:Select>\r\n\r\n                <ui:InputNumber></ui:InputNumber>\r\n\r\n                <div class=\"container\">\r\n                    <ui:Checkbox bind:value={this.formData.checkAll} indeterminate={this.formData.isIndeterminate} on:change={handleCheckAllChange.bind(this)} />\r\n                </div>\r\n                <ui:CheckboxGroup bind:value={this.formData.checkedCities}>\r\n                    <d:each name={this.formData.cities} item=\"item\">\r\n                            <ui:Checkbox key={item} label={item}>{item}</ui:Checkbox>\r\n                    </d:each>\r\n                </ui:CheckboxGroup>\r\n\r\n                {this.createTree()}\r\n\r\n                <ui:TimePicker bind:value={this.formData.timeValue}></ui:TimePicker>\r\n\r\n                <ui:Timeline>\r\n                    <ui:TimelineItem timestamp = \"2023-01-01\">\r\n                            Event start\r\n                    </ui:TimelineItem>\r\n                    <ui:TimelineItem timestamp = \"2023-05-01\">\r\n                            Event end\r\n                    </ui:TimelineItem>\r\n                </ui:Timeline>\r\n\r\n                <ui:Cascader options = {[{\r\n                    value: 'guide',\r\n                    label: 'Guide',\r\n                    children: [\r\n                            {\r\n                            value: 'disciplines',\r\n                            label: 'Disciplines',\r\n                            children: [\r\n                            {\r\n                                value: 'consistency',\r\n                                label: 'Consistency',\r\n                            },\r\n                            {\r\n                                value: 'feedback',\r\n                                label: 'Feedback',\r\n                            },\r\n                            {\r\n                                value: 'efficiency',\r\n                                label: 'Efficiency',\r\n                            },\r\n                            {\r\n                                value: 'controllability',\r\n                                label: 'Controllability',\r\n                            },\r\n                            ],\r\n                            },\r\n                            {\r\n                            value: 'navigation',\r\n                            label: 'Navigation',\r\n                            children: [\r\n                            {\r\n                                value: 'side nav',\r\n                                label: 'Side Navigation',\r\n                            },\r\n                            {\r\n                                value: 'top nav',\r\n                                label: 'Top Navigation',\r\n                            },\r\n                            ],\r\n                            },\r\n                    ],\r\n                    }\r\n                ]}></ui:Cascader>\r\n\r\n                <ui:ColorPicker value = \"#409EFF\"></ui:ColorPicker>\r\n                <ui:DatePicker bind:value={this.formData.datePickerValue}></ui:DatePicker>\r\n\r\n                <ui:Descriptions title = \"User\">\r\n                    <ui:DescriptionsItem label = \"Description\">\r\n                            Description Item\r\n                    </ui:DescriptionsItem>\r\n                </ui:Descriptions>\r\n\r\n                <ui:Collapse bind:value={this.formData.collapseValue}>\r\n                    <ui:CollapseItem title = \"title 1\" name = \"1\">\r\n                            <div>\r\n                                Consistent with real life: in line with the process and logic of real\r\n                                life, and comply with languages and habits that the users are used to;\r\n                            </div>\r\n                    </ui:CollapseItem>\r\n                    <ui:CollapseItem title = \"title 2\" name = \"2\">\r\n                            <div>\r\n                                Operation feedback: enable the users to clearly perceive their\r\n                                operations by style updates and interactive effects;\r\n                            </div>\r\n                    </ui:CollapseItem>\r\n                </ui:Collapse>\r\n\r\n                <ui:Empty description = \"Not Data\"></ui:Empty>\r\n\r\n                <ui:Pagination total = {100}></ui:Pagination>\r\n\r\n                <ui:Progress percentage = {50}></ui:Progress>\r\n                <ui:Result title = \"Success\" subTitle=\"Please follow the instructions\">\r\n                    \r\n                    <ui:Button s:extra type = \"primary\">Back</ui:Button>\r\n                </ui:Result>\r\n\r\n                <ui:Skeleton></ui:Skeleton>\r\n                <ui:Skeleton style=\"--el-skeleton-circle-size: 100px\">\r\n                    <s:template>\r\n                            <ui:SkeletonItem variant = \"circle\"></ui:SkeletonItem>\r\n                    </s:template>\r\n                </ui:Skeleton>\r\n\r\n                <ui:Tag>Tag</ui:Tag>\r\n\r\n                <ui:Backtop right={20} bottom={100} />\r\n\r\n                <ui:PageHeader>\r\n                \r\n                    <ui:Breadcrumb s:breadcrumb separator=\"/\">\r\n                            <ui:BreadcrumbItem to=\"{ path: '/' }\">homepage</ui:BreadcrumbItem>\r\n                            <ui:BreadcrumbItem><a href=\"/\">promotion management</a></ui:BreadcrumbItem>\r\n                            <ui:BreadcrumbItem>promotion list</ui:BreadcrumbItem>\r\n                            <ui:BreadcrumbItem>promotion detail</ui:BreadcrumbItem>\r\n                    </ui:Breadcrumb>\r\n                    <div s:content style=\"display:flex;align-items: center;\">\r\n                            <ui:Avatar\r\n                                class=\"mr-3\"\r\n                                size={32}\r\n                                src=\"https://cube.elemecdn.com/0/88/03b0d39583f48206768a7534e55bcpng.png\"\r\n                            />\r\n                            <span class=\"text-large font-600 mr-3\"> Title </span>\r\n                            <span\r\n                                class=\"text-sm mr-2\"\r\n                                style=\"color: var(--el-text-color-regular)\"\r\n                            >\r\n                                Sub title\r\n                            </span>\r\n                            <ui:Tag>Default</ui:Tag>\r\n                    </div>\r\n\r\n                </ui:PageHeader>\r\n\r\n                <ui:Menu mode=\"horizontal\">\r\n                    <ui:MenuItem index = \"1\">A</ui:MenuItem>\r\n                    <ui:MenuSubitem index = \"2\">\r\n                            <span s:title>B</span>\r\n                            <ui:MenuItem index = \"2-1\">B-A</ui:MenuItem>\r\n                            <ui:MenuItem index = \"2-2\">B-B</ui:MenuItem>\r\n                    </ui:MenuSubitem>\r\n                </ui:Menu>\r\n\r\n                <ui:Steps>\r\n                    <ui:Step title = \"Step 1\"></ui:Step>\r\n                    <ui:Step title = \"Step 2\"></ui:Step>\r\n                </ui:Steps>\r\n\r\n                <ui:Tabs>\r\n                    <ui:TabPane label=\"User\" name=\"first\">User</ui:TabPane>\r\n                    <ui:TabPane label=\"Config\" name=\"second\">Config</ui:TabPane>\r\n                    <ui:TabPane label=\"Role\" name=\"third\">Role</ui:TabPane>\r\n                    <ui:TabPane label=\"Task\" name=\"fourth\">Task</ui:TabPane>\r\n                </ui:Tabs>\r\n\r\n                <ui:Button type=\"primary\" style=\"margin-left: 16px\" on:click={this.formData.drawer = true}>\r\n                    Open Drawer\r\n                </ui:Button>\r\n                <ui:Drawer\r\n                    bind:value={this.formData.drawer}\r\n                    title=\"I am the title\"\r\n                    direction=\"rtl\"\r\n                >\r\n                    <span>Hi, there!</span>\r\n                </ui:Drawer>\r\n\r\n                <ui:Popconfirm title=\"Are you sure to delete this?\">\r\n                    <ui:Button s:reference>Delete</ui:Button>\r\n                </ui:Popconfirm>\r\n\r\n                <ui:Popover\r\n                    placement=\"top-start\"\r\n                    title=\"Title\"\r\n                    width={200}\r\n                    trigger=\"hover\"\r\n                    content=\"this is content, this is content, this is content\"\r\n                >\r\n            \r\n                <ui:Button s:reference>Hover to activate</ui:Button>\r\n\r\n                </ui:Popover>\r\n\r\n                <ui:Tooltip\r\n                    class=\"box-item\"\r\n                    effect=\"dark\"\r\n                    content=\"Top Left prompts info\"\r\n                    placement=\"top-start\"\r\n                    >\r\n                    <ui:Button>top-start</ui:Button>\r\n                </ui:Tooltip>\r\n\r\n\r\n                <ui:Carousel height={\"150px\"}>\r\n                    <ui:CarouselItem d:for=\"item in 4\" key={item}>\r\n                            <h3 class=\"small justify-center\" text=\"2xl\">{item}</h3>\r\n                    </ui:CarouselItem >\r\n                </ui:Carousel>\r\n\r\n                <ui:Card class=\"box-card\">\r\n                    <div s:header class=\"card-header\">\r\n                            <span>Card name</span>\r\n                            <ui:Button class=\"button\" text>Operation button</ui:Button>\r\n                    </div>\r\n                    <div d:for=\"o in 4\" key={o} class=\"text item\">{ 'List item ' + o }</div>\r\n                </ui:Card> \r\n\r\n                <ui:Badge value = {12}>\r\n                    <ui:Button>comments</ui:Button>\r\n                </ui:Badge>\r\n\r\n                <ui:Image src = \"https://fuss10.elemecdn.com/e/5d/4a731a90594a4af544c0c25941171jpeg.jpeg\"></ui:Image>\r\n\r\n                <ui:Upload action = \"http://ww.com\">\r\n                    <ui:Button>Click upload</ui:Button>\r\n                </ui:Upload>\r\n\r\n                <ui:Calendar></ui:Calendar>\r\n\r\n                <ui:Transfer bind:value={this.formData.transferOptions} data = {this.getTransferOptions()}></ui:Transfer>\r\n\r\n                \r\n                <ui:InfiniteScroll value = {this.loadList} disabled = {this.formData.infiniteCount > 20} distance={5}>\r\n                    <ul class=\"infinite-list\" style=\"overflow: auto\">\r\n                            <li d:for=\"i in this.formData.infiniteCount\"  key={i} class=\"infinite-list-item\">infinite-scroll {i}</li>\r\n                    </ul>\r\n                </ui:InfiniteScroll>\r\n\r\n                <DirectiveTop />\r\n\r\n                <Foreach>\r\n                    \r\n                </Foreach>\r\n\r\n                <div d:custom={{name:Loading.directive,value:true}}>\r\n                    loadding...\r\n                </div>\r\n                \r\n                <d:custom name={MyDirective} value={true}>\r\n                    <div>MyDirective...</div>\r\n                </d:custom>\r\n\r\n                <ui:Pagination total={50} pageSize={10} b:currentPage={this.formData.page} ></ui:Pagination>\r\n                <div>=====currentPage ======={this.formData.page} =========</div>\r\n\r\n                <ui:Dialog bind:value={this.showDialog} title={this.selectedData.flag?\"编辑\":'删除'} lockScroll = {false}>\r\n                    <d:if condition={this.selectedData.flag}>\r\n                            <ui:Form bind:value={this.selectedData.row}>\r\n                                <ui:FormItem label = \"姓名\" prop = \"name\">\r\n                                        <ui:Input bind:value={this.selectedData.row.name}></ui:Input>\r\n                                </ui:FormItem>\r\n                                <ui:FormItem label = \"手机\" prop = \"phone\">\r\n                                        <ui:Input bind:value={this.selectedData.row.phone}></ui:Input>\r\n                                </ui:FormItem>\r\n                            </ui:Form>\r\n                    </d:if>\r\n                    <d:else>\r\n                            确定要删除“{this.selectedData.row.name}”吗？\r\n                    </d:else>\r\n\r\n                    <ui:RichText></ui:RichText>\r\n\r\n                    <div s:footer>\r\n                            <ui:Button on:click={showDialog = false}>取 消</ui:Button>\r\n                            <ui:Button type=\"primary\" on:click={saveEdit.bind(this)}>确 定</ui:Button>\r\n                    </div>\r\n                </ui:Dialog>\r\n\r\n        </div>\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n<style type='scss'>\r\n    .infinite-list {\r\n        height: 300px;\r\n        padding: 0;\r\n        margin: 0;\r\n        list-style: none;\r\n    }\r\n    .infinite-list .infinite-list-item {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        height: 50px;\r\n        background: #ccc;\r\n        margin: 10px;\r\n        color: #000;\r\n    }\r\n    .infinite-list .infinite-list-item + .list-item {\r\n        margin-top: 10px;\r\n    }\r\n</style>"]}