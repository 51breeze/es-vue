{"version":3,"sources":["D:/tools/es-vue/test/src/karma/components/List.es"],"names":["getKeySymbols","_homePage","lists","creator","name","title","value","homePage","console","log","homeList","onMounted","getAttribute","items","render","fromData","forMap","item","label","index","key","createRecord","reload","createComponent","check","type","account","password"],"mappings":";;;;;wBAGAA;;;;;aAmBYC;aAYAC;;;;;qDAtBO;;;;;;;OATnBC;;;;;;;;;;;;;;;;;;;;;;;;;;;SASYC;;;mBAAO;;SAEXC;;;0BAAAA;iBACA,OAAO,eAAKD;;0BAGZC,MAAMC;iBACN,eAAKF,IAAL,CAAYE;;;;SAGRL;;;;SAGJM;;;0BAKAA;iBACA,OAAO,eAAKN;;0BANZM,SAASD;iBACT,eAAKL,SAAL,CAAiBK;iBAChB,AAAAE,QAAQC,IAAI;;;;SAOTP;;;;SAGJQ;;;0BAAAA,SAASJ;iBACT,eAAKJ,KAAL,CAAaI;;;SAIPK;;4BAAAA;iBACN,AAAAH,QAAQC,IAAK,KAAKG,aAAa;iBAC/B,AAAAJ,QAAQC,IAAI,sCAAuC,KAAKJ,MAAO,KAAKQ;;;;SAIxEC;;4BAAAA;iBAEG,AAAAN,QAAQC,IAAI,gCAAiC,KAAKJ,MAAO,KAAKQ,MAAO,KAAKE,UAEzE;;2BAAkB;;;6BACN;;yBAAS,KAAKV;;;yBACjB,eAAKD;;;+BACC;8BACPY,OAAa,KAAAH;qDACC;;yBAAa,AAAAI,KAAKC;;;+BAIzB;8BACPF,OAA6B,KAAAH;yBACxB,AAAAI,KAAKC;;;yBAAQC;;;+BAIX;uBACuB,KAAAN;yBACzB,AAAAI,KAAKC;;;yBAAQC;;;+BAIX;uBACO,KAAAN;yBACT,AAAAI,KAAKC;;;yBAAQE;;;+BAIX;8BACPJ,OAA0B,KAAAD;8CAAiBK;;yBACtCA;;yBAAMH;;;;;;;;;;uBA9E3BI;uBAAAC;;;0BAAAC;;;;;;2BAE+B;;;;2BAAA;;;;0BAIlB;iBAAC,AAAAC,MAAM;iBAAS,AAAAC,KAAK;iBAAQ,AAAAC,QAAS;iBAAS,AAAAC,SAAU;;;;;0BAAzD;iBAAC,AAAAH,MAAM;iBAAS,AAAAC,KAAK;iBAAQ,AAAAC,QAAS;iBAAS,AAAAC,SAAU","sourcesContent":["package karma.components;\r\nimport web.components.Component\r\n\r\nclass List extends Component {\r\n\r\n    items:({label:string})[] = [];\r\n\r\n   // title:string ='the is list Component';\r\n\r\n    fromData={check:'string',type:'123',  account: 'string',password: 'string'};\r\n\r\n    @Reactive\r\n    private name = 'the is list Component';\r\n\r\n    get title(){\r\n        return this.name;\r\n    }\r\n\r\n    set title(value:string){\r\n        this.name = value;\r\n    }\r\n\r\n    private _homePage;\r\n\r\n    @Injector\r\n    set homePage(value){\r\n        this._homePage = value;\r\n         console.log('------Injector(homePage) List components---------' )\r\n    }\r\n\r\n    get homePage(){\r\n        return this._homePage;\r\n    }\r\n\r\n    private lists;\r\n\r\n    @Injector(list)\r\n    set homeList(value){\r\n        this.lists = value;\r\n    }\r\n\r\n    @Override\r\n    protected onMounted():void{\r\n        console.log( this.getAttribute('config') )\r\n        console.log('---List Component----onMounted-----', this.title, this.items);\r\n    }\r\n   \r\n    @Override\r\n    render(){\r\n\r\n       console.log('---List Component----render--', this.title, this.items, this.fromData );\r\n\r\n        return <div class=\"list\" xmlns:ui=\"web.ui\" xmlns:d=\"@directives\">\r\n            <h5 ref='title'>{this.title}</h5>\r\n            <h6>{this.name}</h6>\r\n            <div class='for-way1'>\r\n                <d:for name=\"items\" item=\"item\" key=\"key\">\r\n                    <span ref='way1-item'>{item.label}</span>\r\n                </d:for>\r\n            </div>\r\n\r\n            <div class='for-way2'>\r\n                <span d:for=\"(item,index) in items\">\r\n                    {item.label}-{index}\r\n                </span>\r\n            </div>\r\n\r\n            <div class='for-way3'>\r\n                <span d:each=\"(item,index) in items\">\r\n                    {item.label}-{index}\r\n                </span>\r\n            </div>\r\n\r\n            <div class='for-way4'>\r\n                <d:each name=\"items\" item=\"item\" key=\"key\" >\r\n                    {item.label}-{key}\r\n                </d:each>\r\n            </div>\r\n\r\n            <div class='from-data'>\r\n                <div d:for=\"(item,key) in fromData\" class={key}>\r\n                    {key}:{item}\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    }\r\n\r\n}"]}