{"version":3,"sources":["D:/tools/es-vue/test/src/Test.es"],"names":["getKeySymbols","Test","options","label","creator","onInitialized","console","log","onMounted","get","getAttribute","onBeforeMount","name","reactive","value","val","tips","Notification","title","message","skin","childElements","render","beforeEnter","args","toggle","isShow","createRecord","reload","createComponent"],"mappings":";;;;;;;;;;;;wBAoBIA;UAEIC,KAAaC;KACT,oBAAMA;;;aAmEDC,MAAM;;;;OAtEnBC;;;;;;SAOIC;;4BAAAA;iBAEI,AAAAC,QAAQC,IAAI;iBACZ,oBAAMF;;;;SAMAG;;4BAAAA;iBAEL,AAAAF,QAAQC,IAAK,QAAAE,SAAA,KAAKC,aAAa;;;;;;;;;;;;;;SAOpCC;;4BAAAA;iBACK,AAAAL,QAAQC,IAAI;;;;SAGbK;;;0BAAAA;iBACA,OAAO,KAAKC,SAAiB;;0BAG7BD,KAAKE;iBACL,KAAKD,SAAS,OAAQC;;;;SAGtBA;;;0BAAAA;iBACA,OAAO,KAAKD,SAAiB;;0BAG7BC,MAAMC;iBACN,AAAAT,QAAQC,IAAI;iBACZ,KAAKM,SAAS,QAAQE;;;;SAG1BC;;4BAAAA;iBAEI,AAAAC,aAAa;qBACT,AAAAC,MAAO;qBACP,AAAAC,QAAS;;;;;SAKbC;;;0BAAAA;iBACA,OAAO;;;;SAIPC;;;0BAMAA;iBACA,OAAO,KAAKR,SAAS;;0BAPrBQ,cAAcP;iBAEd,KAAKD,SAAS,WAAYC;;;;SAQrBX;;;;SAGTmB;;4BAAAA;iBAMI;;;qCAE8B,KAAKN;;;;6BAGd;6BAAS;;6BAGF,KAAKJ;;;wCACG,KAAAE;kCAAc;kCAAc;wDAA5B,KAAAA;;;;2CACA;;;2CACA;;;;;;;;;qBAOvB,eAAKX;;4BAEG;;;;;;4BAEA;;;;;;;;;;;SAsCzBoB;;4BAAAA,YAAe;iBAEX,AAAAjB,QAAQC,IAAKiB;;;;;;;;;;;;;;SAMjBC;;4BAAAA;iBACI,KAAKC,MAAL,CAAc,CAAC,KAAKA;iBACpB,AAAApB,QAAQC,IAAI,WAAY,KAAKmB;;;;;;;;uBArJrCC;uBAAAC;;;0BAAAC;;;;;;;;;;;;;;;;;;;;;qBAiJqB;;;;qBAAA","sourcesContent":["package{\r\n\r\n    import web.components.Component;\r\n    import web.events.ComponentEvent;\r\n    import Person;\r\n    import ChildPerson;\r\n    import web.ui.Select;\r\n    import web.ui.Option;\r\n    import web.ui.Notification;\r\n    import web.Skin;\r\n    import MySkin;\r\n    import web.components.Viewport\r\n    import web.components.Link;\r\n    import web.animation.Transition;\r\n    import web.animation.TransitionGroup;\r\n    import web.components.KeepAlive;\r\n    import MyOption;\r\n    import web.ui.Dialog;\r\n\r\n    @Embed('./assets/test.css')\r\n    class Test extends Component{\r\n\r\n        constructor( options ){\r\n            super(options);\r\n        }\r\n\r\n        @override\r\n        onInitialized(){\r\n\r\n            console.log('====onInitialized========')\r\n            super.onInitialized()\r\n\r\n           \r\n        }\r\n\r\n        @Override\r\n        protected onMounted():void{\r\n            \r\n             console.log( this.getAttribute('instance').setupState  )\r\n        }\r\n\r\n        @Required\r\n        address:string;\r\n\r\n        @override\r\n        onBeforeMount(){\r\n             console.log('=====beforeMount======')\r\n        }\r\n\r\n        get name():string{\r\n            return this.reactive<string>('name');\r\n        }\r\n\r\n        set name(value:string){\r\n            this.reactive('name', value);\r\n        }\r\n\r\n        get value():string{\r\n            return this.reactive<string>('value');\r\n        }\r\n\r\n        set value(val:string){\r\n            console.log('=====ssssssssss======')\r\n            this.reactive('value',val);\r\n        }\r\n\r\n        tips(){\r\n            \r\n            Notification({\r\n                title: '提示成功',\r\n                message: '这是提示文案这是提示文案这是提示文案这是提示文案这是提示文案这是提示文案这是提示文案这是提示文案'\r\n            });\r\n\r\n        }\r\n\r\n        get skin(){\r\n            return null;\r\n            //return new MySkin(this);\r\n        }\r\n\r\n        set childElements(value:Node){\r\n            \r\n            this.reactive('children', value);\r\n\r\n        }\r\n\r\n        get childElements():Node{\r\n            return this.reactive('children');\r\n        }\r\n\r\n        private  label='9999999'\r\n\r\n        @override\r\n        render(){\r\n\r\n            // var s = new Select();\r\n            // s.value = 666;\r\n            // s.focus();\r\n\r\n            return <div xmlns:slot=\"@slots\" >\r\n                        <p > \r\n                            <h5 on:click={this.tips}>      \r\n                            \r\n                            点击\r\n                                {\"ssss\"} {666}\r\n                               这\"里'提示 \r\n                               \r\n                                       {this.name}</h5> \r\n                            <Select bind:value={value} name = \"name\" size = \"mini\"  >\r\n                                <MyOption value=\"深圳\" />\r\n                                <MyOption value=\"长沙\" />\r\n                                <slot:prefix>\r\n                                    <div>6666</div>\r\n                                </slot:prefix>\r\n                            </Select>\r\n                        </p>\r\n\r\n                        {this.label}\r\n\r\n                        <Link to='/test'>测试页面</Link>\r\n                        <br />\r\n                        <Link to='/index'>首页面</Link>\r\n                        <div>\r\n                            <Viewport />\r\n                        </div>\r\n                </div>\r\n\r\n        \r\n                \r\n\r\n            // return <div xmlns:slot=\"@slots\" >\r\n            //            <h5 on:click={this.tips}>点击这里提示</h5>\r\n            //             <Person name={this.name} >\r\n\r\n            //                 <Select bind:value={this.value} >\r\n            //                     <MyOption value=\"深圳\" />\r\n            //                     <MyOption value=\"长沙\" />\r\n            //                 </Select>\r\n\r\n            //             </Person>\r\n            //             {this.skin.render()}\r\n            //     </div>\r\n\r\n\r\n\r\n\r\n            // return <div xmlns:d=\"@directives\" xmlns:on=\"@events\"  xmlns:te=\"@events::web.ui.TransitionEvent\" >\r\n            //             <button on:click={this.toggle}>\r\n            //                 Toggle\r\n            //             </button>\r\n            //             <TransitionGroup name=\"fade\" duration={{enter: 5000, leave: 5000}} te:BEFORE_ENTER={this.beforeEnter}>\r\n            //                 <p d:if=\"this.isShow\" key=\"1\" >hello</p>\r\n            //                 <p d:if=\"this.isShow\" key=\"2\" >hello</p>\r\n            //                 <p d:if=\"this.isShow\" key=\"3\" >hello</p>\r\n            //             </TransitionGroup>\r\n            //         </div>\r\n\r\n        }\r\n\r\n        beforeEnter(...args){\r\n\r\n            console.log( args )\r\n\r\n        }\r\n\r\n        isShow:boolean = true;\r\n\r\n        toggle(){\r\n            this.isShow = !this.isShow;\r\n            console.log('--------', this.isShow )\r\n        }\r\n\r\n    }\r\n\r\n} "]}