{"version":3,"sources":["D:/tools/es-vue/dist/types/web/ui/RichText.d.es"],"names":["creator","main","Classic","builtinPlugins","Essentials","UploadAdapter","Autoformat","Bold","Italic","BlockQuote","Heading","Image","ImageInsert","ImageInsertViaUrl","SimpleUploadAdapter","Base64UploadAdapter","ImageResize","ImageCaption","ImageStyle","ImageToolbar","ImageUpload","Indent","Link","LinkImage","List","MediaEmbed","Paragraph","PasteFromOffice","PictureEditing","Table","TableToolbar","TextTransformation","Subscript","Strikethrough","Code","CodeBlock","Underline","Alignment","FontBackgroundColor","FontColor","FontFamily","FontSize","FullScreen","SourceEditing","defaultConfig","toolbar","items","image","styles","resizeOptions","name","label","value","insert","integrations","table","contentToolbar","heading","options","model","title","class","view","language","onInitialized","on","type","editor","height","String","toLowerCase","call","editing","writer","root","get","ui","width","parentNode","style","element","plugins","has","sourceEditingPlugin","evt","isSourceEditingMode","nameds","Array","from","getEditableElementsNames","find","includes","el","getEditableElement","is","overflow","getEditorName","createRecord","reload","createComponent"],"mappings":"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","sourcesContent":["package web.ui{\r\n\r\n    import web.components.Component;\r\n\r\n    import ckeditor.editor.Classic;\r\n    import ckeditor.plugins.Paragraph\r\n    import ckeditor.plugins.Essentials\r\n    import ckeditor.plugins.Bold\r\n    import ckeditor.plugins.Underline\r\n    import ckeditor.plugins.Code\r\n    import ckeditor.plugins.CodeBlock\r\n    import ckeditor.plugins.Strikethrough\r\n    import ckeditor.plugins.Subscript\r\n    import ckeditor.plugins.BlockQuote\r\n    import ckeditor.plugins.Heading\r\n    import ckeditor.plugins.Alignment\r\n\r\n    import ckeditor.plugins.UploadAdapter\r\n    import ckeditor.plugins.Autoformat\r\n    import ckeditor.plugins.Image\r\n    import ckeditor.plugins.SimpleUploadAdapter\r\n    import ckeditor.plugins.Base64UploadAdapter \r\n    import ckeditor.plugins.ImageInsert\r\n    import ckeditor.plugins.ImageInsertViaUrl\r\n    import ckeditor.plugins.ImageResize\r\n    import ckeditor.plugins.ImageCaption\r\n    import ckeditor.plugins.ImageStyle\r\n    import ckeditor.plugins.ImageToolbar\r\n    import ckeditor.plugins.ImageUpload\r\n    import ckeditor.plugins.Indent\r\n    import ckeditor.plugins.Link\r\n    import ckeditor.plugins.LinkImage\r\n    import ckeditor.plugins.List\r\n    import ckeditor.plugins.MediaEmbed\r\n    import ckeditor.plugins.PasteFromOffice\r\n    import ckeditor.plugins.PictureEditing\r\n    import ckeditor.plugins.Table\r\n    import ckeditor.plugins.TableToolbar\r\n    import ckeditor.plugins.TextTransformation\r\n    import ckeditor.plugins.Italic\r\n\r\n    import ckeditor.plugins.FontBackgroundColor\r\n    import ckeditor.plugins.FontColor\r\n    import ckeditor.plugins.FontFamily\r\n    import ckeditor.plugins.FontSize\r\n    import ckeditor.plugins.FullScreen\r\n    import ckeditor.plugins.SourceEditing\r\n    \r\n    class RichText extends RichEditor{\r\n\r\n        @Override\r\n        protected onInitialized():void{\r\n            super.onInitialized();\r\n            this.on('ready', (type, editor:Classic)=>{\r\n                let height = String(this.height).toLowerCase()==='auto' ? 'auto' : `calc(${this.height} - 39px)`\r\n                editor.editing.view.change( writer => {\r\n                    const root = editor.editing.view.document.getRoot();\r\n                    if(!editor.ui.view.element){\r\n                        writer.setStyle('width',this.width, root);\r\n                    }else{\r\n                        writer.setStyle('width','100%', root);\r\n                    }\r\n\r\n                    if( editor.ui.view.editable ){\r\n                        const parentNode = editor.ui.view.editable.element.parentNode as HTMLElement;\r\n                        if( parentNode ){\r\n                            parentNode.style.height = height;\r\n                        }\r\n                    }\r\n                    writer.setStyle('height',height, root);\r\n                    writer.addClass('rich-text-classic-editable', root);\r\n                });\r\n                \r\n                const element = editor.ui.view.element as HTMLElement;\r\n                if(element){\r\n                    element.style.width=this.width;\r\n                }\r\n\r\n                if(this.height !=='auto' && editor.plugins.has('SourceEditing')) {\r\n                    const sourceEditingPlugin = editor.plugins.get('SourceEditing') as {on:(...args)=>void};\r\n                    if(sourceEditingPlugin){\r\n                        sourceEditingPlugin.on('change:isSourceEditingMode', (evt, name, isSourceEditingMode) => {\r\n                            if(isSourceEditingMode){\r\n                                const nameds = Array.from(editor.ui.getEditableElementsNames());\r\n                                const name = nameds.find(name=>name.includes('sourceEditing'));\r\n                                if(name){\r\n                                    const el = editor.ui.getEditableElement(name)\r\n                                    if(el is HTMLElement){\r\n                                        el.style.height = height;\r\n                                        el.style.overflow = 'auto';\r\n                                        if(el.parentNode is HTMLElement){\r\n                                            el.parentNode.style.height = height;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        \r\n        @Override\r\n        protected get editor(){\r\n            return Classic;\r\n        }\r\n\r\n        @Override\r\n        protected getEditorName(){\r\n            return 'classic'\r\n        }\r\n\r\n        @Main(false)\r\n        static main(){\r\n            Classic.builtinPlugins=[\r\n                Essentials,\r\n                UploadAdapter,\r\n                Autoformat,\r\n                Bold,\r\n                Italic,\r\n                BlockQuote,\r\n                Heading,\r\n                Image,\r\n                ImageInsert,\r\n                ImageInsertViaUrl,\r\n                SimpleUploadAdapter,\r\n                Base64UploadAdapter,\r\n                ImageResize,\r\n                ImageCaption,\r\n                ImageStyle,\r\n                ImageToolbar,\r\n                ImageUpload,\r\n                Indent,\r\n                Link,\r\n                LinkImage,\r\n                List,\r\n                MediaEmbed,\r\n                Paragraph,\r\n                PasteFromOffice,\r\n                PictureEditing,\r\n                Table,\r\n                TableToolbar,\r\n                TextTransformation,\r\n                Subscript,\r\n                Strikethrough,\r\n                Code,\r\n                CodeBlock,\r\n                Underline,\r\n                Alignment,\r\n                FontBackgroundColor,\r\n                FontColor,\r\n                FontFamily,\r\n                FontSize,\r\n                FullScreen,\r\n                SourceEditing,\r\n            ];\r\n            Classic.defaultConfig = {\r\n                toolbar: {\r\n                    items: [\r\n                        'undo', 'redo',\r\n                        '|', 'heading','fontSize','fontFamily','fontColor','fontBackgroundColor',\r\n                        '|', 'bold', 'italic','underline', 'strikethrough','Subscript', 'outdent', 'indent','alignment',\r\n                        '|','bulletedList', 'numberedList','blockQuote',\r\n                        '|','link','insertImage','mediaEmbed','insertTable',\r\n                        '|','SourceEditing','Code','CodeBlock',\r\n                        '|','FullScreen'\r\n                    ]\r\n                },\r\n                image: {\r\n                    styles: [\r\n                        'alignCenter',\r\n                        'alignLeft',\r\n                        'alignRight'\r\n                    ],\r\n                    resizeOptions: [\r\n                        {\r\n                            name: 'resizeImage:original',\r\n                            label: 'Original',\r\n                            value: null\r\n                        },\r\n                        {\r\n                            name: 'resizeImage:50',\r\n                            label: '50%',\r\n                            value: '50'\r\n                        },\r\n                        {\r\n                            name: 'resizeImage:75',\r\n                            label: '75%',\r\n                            value: '75'\r\n                        }\r\n                    ],\r\n                    toolbar: [\r\n                        'imageTextAlternative', 'toggleImageCaption', '|',\r\n                        'imageStyle:inline', 'imageStyle:wrapText', 'imageStyle:breakText', 'imageStyle:side', '|',\r\n                        'resizeImage'\r\n                    ],\r\n                    insert: {\r\n                        integrations: [\r\n                            'upload', 'assetManager', 'url'\r\n                        ]\r\n                    }\r\n                },\r\n                table: {\r\n                    contentToolbar: [\r\n                        'tableColumn',\r\n                        'tableRow',\r\n                        'mergeTableCells'\r\n                    ]\r\n                },\r\n                heading: {\r\n                    options: [\r\n                        { model: 'paragraph', title: 'Paragraph', class: 'ck-heading_paragraph' },\r\n                        { model: 'heading1', view: 'h1', title: 'Heading 1', class: 'ck-heading_heading1' },\r\n                        { model: 'heading2', view: 'h2', title: 'Heading 2', class: 'ck-heading_heading2' },\r\n                        { model: 'heading3', view: 'h3', title: 'Heading 3', class: 'ck-heading_heading3' },\r\n                        { model: 'heading4', view: 'h4', title: 'Heading 4', class: 'ck-heading_heading4' },\r\n                        { model: 'heading5', view: 'h5', title: 'Heading 5', class: 'ck-heading_heading5' },\r\n                        { model: 'heading6', view: 'h6', title: 'Heading 6', class: 'ck-heading_heading6' }\r\n                    ]\r\n                },\r\n                language: 'zh-cn'\r\n            };\r\n        }\r\n    }\r\n}"]}