{"version":3,"sources":["D:/tools/es-vue/dist/types/web/Lang.es"],"names":["getKeySymbols","_qureyLanguageField","messages","_defaultLocale","_currentLocale","_localeMap","creator","_langDefaultClass","Lang","instances","Map","use","langClass","instance","get","set","create","setClass","fetch","locale","format","data","getLocale","defaultValue","obj","Array","from","values","length","setLocale","value","forEach","size","qureyLanguageField","list","getLocaleFiles","every","group","file","index","path","lastIndexOf","name","slice","isFile","add","content","children","detectLanguage","language","qureyLanguage","getRefs","target","segs","createFlag","i","hasOwnProperty","getSegs","toLowerCase","split","getCommonKey","getLocaleKey","setLocaleMap","defaultLocale","message","object","merge","System","isObject","assigned","prop","pop","current","locales","key","commons","de","String","replaceAll","a","p","b","charCodeAt"],"mappings":";;;;;;;wBAEIA;;;;aA+CYC,oBAAsB;aAUtBC,SAAW;aA6FXC,eAAwB;aACxBC,eAAwB;aACxBC,WAAa;;;;OAxJzBC;;;;;;SAEmBC;;;mBAAgCC;;SACxBC;;mBAA2B,IAAIC;;SAE/CC;;4BAAAA,IAA2BC;iBAC9BA,SAAA,CAAYA,aAAW,KAAAL,kBACvB;qBAAI,AAAAM,WAAW,KAAAJ,UAAUK,IAAIF;oBACzB,CAACC;qBACD,KAAAJ,UAAUM,IAAIH,UAAWC,QAAA,CAAU,IAAID;qBACvC,AAAAC,SAASG;kBAEb;wBAAOH;;;SAGJI;;4BAAAA,SAAiCL;iBACpC,KAAAL,iBAAA,CAAoBK;;;SAGjBM;;4BAAAA,MAAMC,OAAeP,SAAA,CAAsB;iBAC9C,OAAO,KAAAD,IAAIC,WAAWM,MAAMC;;;SAGzBC;;4BAAAA,OAAOD,OAAeE,KAAST,SAAA,CAAsB;iBACxD,OAAO,KAAAD,IAAIC,WAAWQ,OAAOD,OAAQE;;;SAGlCC;;4BAAAA,UAAiCV,SAAA,CAAY,KAAMW,YAAA,CAAa;oBAChEX;qBACC,MAAM,AAAAY,MAAM,KAAAf,UAAUK,IAAIF;qBAC1B,OAAO,AAAAY,MAAM,AAAAA,IAAIF,cAAcC;kBAEnC;uBAAM,AAAAC,MAAM,AAAAC,MAAMC,KAAK,KAAAjB,UAAUkB;iBACjC,OAAO,AAAAH,IAAII,SAAO,IAAI,AAAAJ,IAAI,GAAGF,cAAcC;;;SAGxCM;;4BAAAA,UAAiCC,MAAclB,SAAA,CAAY;oBAC3DA;qBACC,MAAM,AAAAY,MAAM,KAAAf,UAAUK,IAAIF;qBAC1B,OAAO,AAAAY,MAAM,AAAAA,IAAIK,UAAUC,SAAS;;iBAExC,KAAArB,UAAUsB,SAASP;qBACf,AAAAA,IAAIK,UAAUC;oBAElB;wBAAO,KAAArB,UAAUuB,OAAK;;;;;SAGlB/B;;;;SAEJgC;;;0BAAAA;iBACA,OAAO,eAAKhC;;0BAGZgC,mBAAmBH;iBACnB,eAAK7B,mBAAL,CAA2B6B;;;SAGvB5B;;;;SACEc;;4BAAAA;iBAEN,MAAM,AAAAkB,OAAO,KAAKC;iBAClB,MAAM,AAAAC,SAASF,KAASG,KAAA,CAAa;qBACjC,AAAAH,KAAKH,SAAQO;yBACT,MAAM,AAAAC,QAAQ,AAAAD,KAAKE,KAAKC,YAAY;yBACpC,IAAI,AAAAC,OAAO,AAAAJ,KAAKE,KAAKG,MAAM,AAAAJ,QAAM;4BAC9B,AAAAD,KAAKM;6BACJF,IAAA,CAAO,AAAAA,KAAKC,MAAM,EAAE,AAAAD,KAAKD,YAAY;6BACrC,KAAKI,IAAI,AAAAR,QAAQ,AAAAA,QAAM,MAAIK,OAAOA,KAAM,AAAAJ,KAAKQ;;4BACvC,AAAAR,KAAKS,YAAY,AAAAT,KAAKS,SAASnB,SAAO;6BAC5C,AAAAQ,MAAM,AAAAE,KAAKS,SAAU,AAAAV,QAAQ,AAAAA,QAAM,MAAIK,OAAOA;;;;iBAI1D,AAAAN,MAAMF;;;SAGAc;;4BAAAA;iBACN,IAAI,AAAAC,WAAW,KAAKC;oBACjBD;qBACC,OAAOA;kBAYX;wBAAO;;;SAGDC;;4BAAAA;iBAmBN,OAAO;;;SAGDf;;4BAAAA;iBACN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SAGMgB;;4BAAAA,QAAQC,OAAeC,KAAeC,UAAA,CAAW;qBACnD,IAAI,AAAAC,IAAE,EAAE,AAAAA,IAAE,AAAAF,KAAKzB,OAAO,AAAA2B;qBACtB,MAAM,AAAAb,OAAO,AAAAW,KAAKE;wBACf,AAAAH,OAAOI,eAAed;yBACrBU,MAAA,CAAS,AAAAA,OAAOV;;4BAEbY;6BACCF,MAAA,CAAS,AAAAA,OAAOV,KAAP,CAAe;;6BAExB,OAAO;;;kBAInB;wBAAOU;;;SAGDK;;4BAAAA,QAAQtC;iBACdA,MAAA,CAAS,AAAAA,OAAOuC,cAChB;wBAAO,AAAAvC,OAAOwC,MAAM;;;SAGdC;;4BAAAA;iBACN,OAAO;;;SAGDC;;4BAAAA,aAAanB;iBACnBA,IAAA,CAAO,eAAKrC,WAAWqC,SAASA,KAChC;wBAAO,AAAAA,KAAKgB;;;SAGRvD;;;;SACAC;;;;SACAC;;;;SAERyD;;4BAAAA,aAAazC;iBACT,eAAKhB,UAAL,CAAkBgB;;;SAGtBQ;;4BAAAA,UAAUV;iBACN,eAAKf,cAAL,CAAsBe;;;SAG1BG;;4BAAAA;iBACI,IAAI,AAAAQ,QAAQ,eAAK1B;oBACd,AAAA0B,UAAS;qBACR,eAAK1B,cAAL,CAAsB0B,KAAA,CAAQ,KAAKkB;kBAEvC;wBAAOlB,SAAS,KAAKiC;;;SAGrBA;;;0BAIAA;iBACA,OAAO,eAAK5D;;0BALZ4D,cAAc5C;iBACd,eAAKhB,cAAL,CAAsBgB;;;SAO1B0B;;4BAAAA,IAAI1B,OAAe6C;iBACf,MAAM,AAAAX,OAAO,KAAKI,QAAQtC;iBAC1B,MAAM,AAAA8C,SAAS,KAAKd,QAAQ,eAAKjD,SAAUmD,KAAM;oBAC9CY;qBACC,KAAKC,MAAMD,OAAQD;;;;SAI3BE;;4BAAAA,MAAMd,OAA2BY;qBACzB,IAAI,AAAAtB,QAAQsB;wBACT,AAAAG,OAAOC,SAAS,AAAAJ,QAAQtB;yBACvB,AAAAU,OAAO,AAAAV,KAAKgB,cAAZ,CAA6B,KAAKQ,MAAM,GAAI,AAAAF,QAAQtB;;yBAEpD,AAAAU,OAAO,AAAAV,KAAKgB,cAAZ,CAA6B,AAAAM,QAAQtB;;kBAG7C;wBAAOU;;;SAGXlC;;4BAAAA,MAAMwB,KAAa2B,QAAA,CAAkB;iBACjC,MAAM,AAAAhB,OAAO,KAAKI,QAAQf;iBAC1B,MAAM,AAAA4B,OAAO,AAAAjB,KAAKkB;iBAClB,MAAM,AAAAC,UAAUH,YAAY,KAAK/C;iBAEjC,IAAI,AAAAmD,UAAU,eAAKvE,SAAS,KAAK2D,aAAaW,aAAa;iBAC3D,IAAI,AAAAP,SAAS,KAAKd,QAAQsB,QAASpB;oBAChCY,UAAU,AAAAA,OAAOT,eAAec;qBAC/B,OAAO,AAAAL,OAAOK;kBAGlB;uBAAM,AAAAI,MAAM,KAAKd;oBACdc;qBACC,IAAI,AAAAC,UAAa,AAAAF,QAAQC,QAAQ;wBAC9B,AAAAC,QAAQnB,eAAec;yBACtB,OAAO,AAAAK,QAAQL;;qBAGnBK,OAAA,CAAQ,eAAKzE,SAASwE,QAAQ;wBAC3B,AAAAC,QAAQnB,eAAec;yBACtB,OAAO,AAAAK,QAAQL;;kBAIvB;uBAAM,AAAAM,KAAK,KAAKb;oBACba,MAAM,AAAAA,OAAOJ;qBACZ,OAAO,KAAKtD,MAAMwB,KAAMkC;kBAG5B;wBAAOlC;;;SAGXtB;;4BAAAA,OAAOsB,KAAarB;iBAChB,IAAI,AAAAS,QAAQ,KAAKZ,MAAMwB;oBACnB,AAAAZ,UAAUY;qBACVZ,KAAA,CAAQ,AAAA+C,OAAO/C,OACf;2BAAM,AAAAsC,WAAW,AAAAD,OAAOC,SAAS/C;qBACjC,OAAO,AAAAS,MAAMgD,WAAW,qBAAsBC,EAAGC,EAAUC;4BACpD,AAAAD,EAAEE,WAAW,OAAK;6BACjB,OAAO,KAAK9D,OAAO6D,EAAG5D;;4BAEvB+C;6BACC,OAAO,AAAAS,OAAO,AAAAxD,KAAK4D,OAAOF;;6BAE1B,OAAO,AAAAF,OAAOxD;;;kBAI1B;wBAAOS","sourcesContent":["package web{\r\n\r\n    class Lang{\r\n\r\n        static private _langDefaultClass:class<Lang> = Lang;\r\n        static protected const instances:Map<any, Lang> = new Map();\r\n\r\n        static use<T extends class<Lang>>(langClass?:T){\r\n            langClass = langClass||_langDefaultClass;\r\n            let instance = instances.get(langClass)\r\n            if( !instance ){\r\n                instances.set(langClass, instance =new langClass() )\r\n                instance.create();\r\n            }\r\n            return instance;\r\n        }\r\n\r\n        static setClass<T extends class<Lang>>( langClass:T ){\r\n            _langDefaultClass = langClass;\r\n        }\r\n\r\n        static fetch(locale:string, langClass:class<Lang>=null){\r\n            return use(langClass).fetch(locale)\r\n        }\r\n\r\n        static format(locale:string, data:{}, langClass:class<Lang>=null){\r\n            return use(langClass).format(locale, data);\r\n        }\r\n\r\n        static getLocale<T extends class<Lang>>(langClass:T=null, defaultValue='zh-CN'){\r\n            if(langClass){\r\n                const obj = instances.get(langClass);\r\n                return obj ? obj.getLocale() : defaultValue;\r\n            }\r\n            const obj = Array.from(instances.values())\r\n            return obj.length>0 ? obj[0].getLocale() : defaultValue;\r\n        }\r\n\r\n        static setLocale<T extends class<Lang>>(value:string, langClass:T=null){\r\n            if(langClass){\r\n                const obj = instances.get(langClass);\r\n                return obj ? obj.setLocale(value) : false;\r\n            }\r\n            instances.forEach( obj=>{\r\n                obj.setLocale(value);\r\n            });\r\n            return instances.size>0;\r\n        }\r\n\r\n        private _qureyLanguageField = 'lang';\r\n\r\n        get qureyLanguageField(){\r\n            return this._qureyLanguageField;\r\n        }\r\n\r\n        set qureyLanguageField(value:string){\r\n            this._qureyLanguageField = value;\r\n        }\r\n\r\n        private messages = {};\r\n        protected create(){\r\n            type T1 = typeof this.getLocaleFiles();\r\n            const list = this.getLocaleFiles();\r\n            const every = (list:T1, group:string='')=>{\r\n                list.forEach(file=>{\r\n                    const index = file.path.lastIndexOf('/')\r\n                    let name = file.path.slice(index+1);\r\n                    if(file.isFile) {\r\n                        name = name.slice(0,name.lastIndexOf('.'))\r\n                        this.add(group ? group+'.'+name : name, file.content)\r\n                    }else if( file.children && file.children.length>0 ){\r\n                        every(file.children, group ? group+'.'+name : name)\r\n                    }\r\n                });\r\n            }\r\n            every(list);\r\n        }\r\n\r\n        protected detectLanguage(){\r\n            let language = this.qureyLanguage();\r\n            if(language){\r\n                return language;\r\n            }\r\n            when( Env(platform, 'client') ){\r\n                language = window.navigator.language || window.navigator.userLanguage;\r\n                if(language){\r\n                    return language\r\n                }\r\n                const languages = window.navigator.languages;\r\n                if(languages && Array.isArray(languages) ){\r\n                    return languages[0];\r\n                }\r\n            }\r\n            return 'zh-CN';\r\n        }\r\n\r\n        protected qureyLanguage(){\r\n            when( Env(platform, 'client') ){\r\n                let search = location.search;\r\n                let field = this.qureyLanguageField;\r\n                if(search){\r\n                    const params = new URLSearchParams(search);\r\n                    if(params.has(field)){\r\n                        return params.get(field);\r\n                    }\r\n                }\r\n                search = location.hash;\r\n                const index = search.indexOf('?');\r\n                if(index>=0){\r\n                    const params = new URLSearchParams(search.slice(index));\r\n                    if(params.has(field)){\r\n                        return params.get(field);\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n\r\n        protected getLocaleFiles():annotation.ReadfileResult{\r\n            return @Readfile('@options.localeDir', load=true, relative=true);\r\n        }\r\n\r\n        protected getRefs(target:object, segs:string[], createFlag=false){\r\n            for(let i=0;i<segs.length;i++){\r\n                const name = segs[i];\r\n                if(target.hasOwnProperty(name)){\r\n                    target = target[name];\r\n                }else{\r\n                    if(createFlag){\r\n                        target = target[name] = {}\r\n                    }else{\r\n                        return null;\r\n                    }\r\n                }\r\n            }\r\n            return target;\r\n        }\r\n\r\n        protected getSegs(locale:string){\r\n            locale = locale.toLowerCase();\r\n            return locale.split('.');\r\n        }\r\n\r\n        protected getCommonKey(){\r\n            return 'common';\r\n        }\r\n\r\n        protected getLocaleKey(name:string){\r\n            name = this._localeMap[name] || name;\r\n            return name.toLowerCase();\r\n        }\r\n\r\n        private _defaultLocale:string = 'zh-CN';\r\n        private _currentLocale:string = null;\r\n        private _localeMap = {};\r\n\r\n        setLocaleMap(data:{[key:string]:string}){\r\n            this._localeMap = data;\r\n        }\r\n\r\n        setLocale(locale:string){\r\n            this._currentLocale = locale;\r\n        }\r\n\r\n        getLocale(){\r\n            let value = this._currentLocale;\r\n            if(value=== null){\r\n                this._currentLocale = value = this.detectLanguage();\r\n            }\r\n            return value || this.defaultLocale;\r\n        }\r\n\r\n        set defaultLocale(locale:string){\r\n            this._defaultLocale = locale;\r\n        }\r\n\r\n        get defaultLocale(){\r\n            return this._defaultLocale;\r\n        }\r\n\r\n        add(locale:string, message:{[key:string]:any}){\r\n            const segs = this.getSegs(locale);\r\n            const object = this.getRefs(this.messages, segs, true) as {};\r\n            if(object){\r\n                this.merge(object, message);\r\n            }\r\n        }\r\n\r\n        merge(target:{[key:string]:any}, message:{[key:string]:any}){\r\n            for(let name in message){\r\n                if(System.isObject(message[name])){\r\n                    target[name.toLowerCase()] = this.merge({}, message[name]);\r\n                }else{\r\n                    target[name.toLowerCase()] = message[name];\r\n                }\r\n            }\r\n            return target;\r\n        }\r\n\r\n        fetch(name:string, assigned:string = null):string|null{\r\n            const segs = this.getSegs(name);\r\n            const prop = segs.pop();\r\n            const current = assigned || this.getLocale();\r\n\r\n            let locales = this.messages[this.getLocaleKey(current)] || {};\r\n            let object = this.getRefs(locales, segs);\r\n            if(object && object.hasOwnProperty(prop)){\r\n                return object[prop];\r\n            }\r\n\r\n            const key = this.getCommonKey();\r\n            if(key){\r\n                let commons:{} = locales[key] || {};\r\n                if(commons.hasOwnProperty(prop)){\r\n                    return commons[prop];\r\n                }\r\n\r\n                commons=this.messages[key] || {};\r\n                if(commons.hasOwnProperty(prop)){\r\n                    return commons[prop];  \r\n                }\r\n            }\r\n\r\n            const de = this.defaultLocale;\r\n            if(de && de !== current){\r\n                return this.fetch(name, de)\r\n            }\r\n\r\n            return name;\r\n        }\r\n\r\n        format(name:string, data:any):string|null{\r\n            let value = this.fetch(name) as string;\r\n            if( value !== name ){\r\n                value = String(value) as string;\r\n                const isObject = System.isObject(data);\r\n                return value.replaceAll(/(\\$|\\@)\\{(\\w+)\\}/g, (a, p:string, b:string)=>{\r\n                    if(p.charCodeAt(0)===64){\r\n                        return this.format(b, data);\r\n                    }\r\n                    if(isObject){\r\n                        return String(data[b]) || a;\r\n                    }else{\r\n                        return String(data);\r\n                    }\r\n                });\r\n            }\r\n            return value;\r\n        }\r\n\r\n    }\r\n}"]}